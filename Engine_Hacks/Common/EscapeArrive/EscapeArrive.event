#ifndef ESCAPE_ARRIVE_INSTALLED
#define ESCAPE_ARRIVE_INSTALLED

#define LordMustEscapeLastFlag 0x128
#define AllUnitsMustEscapeFlag 0x129

#include "UnitMenu.lyn.event"

SetUnitAction(0x28, ActionRoutine(0x32270+1))
PUSH

	ORG UM_Arrive_Definition
	POIN $D7E9C 
	SHORT Cmd_Arrive
	SHORT Desc_Cmd_Arrive
	BYTE  NormalText
	BYTE  $4E
	SHORT 0
	POIN ArriveCommandUsability|1
	WORD 0
	POIN ArriveCommandEffect|1
	WORD 0
	WORD 0
	WORD 0

POP

ALIGN 4
RefEscapeTable:
#incbin "RefEscapeTable.dmp"
POIN EscapeQuoteTable

ALIGN 4
FinalEscapeThing: //hooks with post-action calc loop
#incbin "PostActionCorrection.dmp"

#include "EscapeEvent.event"


PUSH
	//fix a jump table allowing for us to be separate map objects
	ORG ($8410C + (4*0x19))
	POIN $841AC
	ORG ($8410C + (4*0x13))
	POIN $841AC
	
	/* make a game over not happen when the last player unit escapes
	//(redone to not break skirmishes)
	ORG $843E6
	BL($BD068) 		//IsSkirmish
	SHORT $2801 	//cmp r0, #0x1
	SHORT $46c0
	SHORT $2065 	//mov r0, #0x65
	BL($83DA8) 		//CheckEventID
	SHORT $0600 	//lsl r0, #0x18
	SHORT $2800 	//cmp r0, #0
	SHORT $D104 	//bne 84404 (game over)
	BL($18FF0) 		//GetAlivePlayerUnitCount
	SHORT $0400 	//lsl r0, #0x10
	SHORT $2800 	//cmp r0, #0x0
	SHORT $D102 	//bne 8440A
	BL($837B0)		//ForcedGameOver
	B($8444E)		//end of func
		//ORG 0x843F0
		//SHORT 0x46C0 0x46C0 0x2001
    */
    ORG $843FA
    SHORT $D106
    
	//these will probably have to be redone too, func is at 2EA28
	ORG 0x2EA34
	SHORT 0x46C0
	ORG 0x2EA3E
	SHORT 0xE001
POP

//LocationBasedEvents:
//Arrive(11,22)
//Arrive(12,22)
//Arrive(13,22)

#define Arrive(seizeX,seizeY) "LOCA 3 [seizeX,seizeY] 0x19"
#define Arrive(eventID,offset,seizeX,seizeY) "LOCA eventID offset [seizeX,seizeY] 0x19"
#define Escape(seizeX,seizeY) "LOCA 3 [seizeX,seizeY] 0x13"
#define Escape(eventID,offset,seizeX,seizeY) "LOCA eventID offset [seizeX,seizeY] 0x13"
	
//This will set the given flag if the unit did not escapes
#define EscapeCapturedCheck(charID,flagID) "SVAL 0xD 0; SVAL 1 charID; SENQUEUE 1; SVAL 1 flagID; SENQUEUE 1; CALL ThraciaEscapeProcessor"

#endif // ESCAPE_ARRIVE_INSTALLED
