// option byte 0x42&40 enables Casual Mode (fallen units come back next chapter).
// hack by circleseverywhere and 7743, menu by hypergammaspaces
// optimizations and improvements by 7743

  PUSH
	//Actually unkill the unit
    ORG $18418
      jumpToHack(CasualMode_Main)
	  
	//Display retreat quote for allies rather than death quote
	ORG $83620
	  jumpToHack(CallRetreatQuote)
	  
	//Setup new save to recognize casual mode
	ORG $30DAC
	  jumpToHack(CasualMode_SetFlag)
	
	//Hijack the last null stub of NewGameDiffilcultySelect and move it to Casual Mode Select Procs.
	ORG 0xA20A88
	BYTE $06 $00 $01 $00; POIN CasualModeSelectProc	//Call new Child Procs [POINTER_PROCS:Child Procs] And Yield
  POP
  
//Include ASMC for Check CasualMode from events
ALIGN 4
#define CasualCheckASMC "SHORT $0D40 $0; POIN CasualCheck_ASMC+1"

ALIGN 4
CasualModeSelectProc: //based on A20A10 
WORD $00001; POIN NAME_NewGameCasualModeSelect
WORD $00004 $080AC078+1 //set destructor
WORD $00002; POIN CM_Kill_SaveMenuCursor+1	//Cursor is displayed twice, so turn it off.
WORD $00002 $080AD5B4+1 //call routine (i/o register setup)
WORD $0000E $0 //sleep 0frame
WORD $00002; POIN CM_CallGraphicsSetup+1 //call routine
WORD $1000E $0 //sleep 1frame
WORD $00002 $080AD5D8+1 //call routine EnableAllGfx
WORD $80018 $080AE2D0+1 //call routine NewFadeIn
WORD $00014 $080AE2A0+1 //call routine FadeInExists
WORD $0000B $0 //label 0
WORD $00003; POIN CM_HandleUserInput+1 //set loop routine
WORD $1000B $0 //label 1
WORD $A000E $0 //sleep 10frame
WORD $2000B $0 //label 2
WORD $80018 $080AE2F4+1 //call routine NewFadeOut
WORD $00014 $080AE2B8+1 //call routine FadeOutExists
WORD $00002; POIN CM_Finish+1 //call routine
WORD $0 $0 //term

//ASM functions
#include "asm/CasualModeMenu.lyn.event"
ALIGN 4

NAME_NewGameCasualModeSelect:
String(NewGameCasualModeSelect)

ALIGN 4
CMTextIDs:
SHORT CasualModeMenuOption ClassicModeMenuOption

ALIGN 4
#include "ShowDifficulty.event"
