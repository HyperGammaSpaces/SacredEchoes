#define VRAM_Address 0x6013300 // Where in VRAM (see No$Gba Obj window) to draw animation 
#define MinimumFrames 28 // Vanilla does 28 frames 


PUSH // Only vanilla address that we take over. 
ORG $81274 // Poin to the vanilla proc	//{U}
//ORG $835B4 // Poin to the vanilla proc	//{J}
POIN gProc_MapAnimRound_Animation
POP 


#include "Internals.event"


#define Empty_AnimID 0 
#define Map_Sword_Anim_ID 1 
#define Map_Lance_Anim_ID 2
#define Map_Axe_Anim_ID 3
#define Map_Bow_Anim_ID 4
#define Map_Magic_Anim_ID 5
#define Map_Light_Anim_ID 6 
#define Map_Dark_Anim_ID 7
#define Map_Monster_Anim_ID 8
#define NumberOfAnimIDs 8

ALIGN 4
WeaponTypeAnimations:
BYTE 0 Map_Sword_Anim_ID // Sword 
BYTE 1 Map_Lance_Anim_ID // Lance 
BYTE 2 Map_Axe_Anim_ID // Axe 
BYTE 3 Map_Bow_Anim_ID // Bow  
BYTE 5 Map_Magic_Anim_ID // Anima 
BYTE 6 Map_Light_Anim_ID // Light 
BYTE 7 Map_Dark_Anim_ID // Dark 
BYTE $B Map_Monster_Anim_ID // Monster 
BYTE $11 Map_Monster_Anim_ID // Dragonstone 
SHORT 0xFFFF // Terminator 

ALIGN 4
SpecificWeaponAnimations: 
BYTE Thunderblade Map_Magic_Anim_ID
SHORT 0xFFFF // Terminator 





// Animation IDs are defined above 
// Animations and Palettes are included in "MapAnimations/Installer.event"

AnimTable_Entry(Map_Sword_Anim_ID,Map_Sword_FrameData)
AnimTable_Entry(Map_Lance_Anim_ID,Map_Lance_FrameData)
AnimTable_Entry(Map_Axe_Anim_ID,Map_Axe_FrameData)
AnimTable_Entry(Map_Bow_Anim_ID,Map_Bow_FrameData)
AnimTable_Entry(Map_Magic_Anim_ID,Map_Magic_FrameData)
AnimTable_Entry(Map_Light_Anim_ID,Map_Light_FrameData)
AnimTable_Entry(Map_Dark_Anim_ID,Map_Dark_FrameData)
AnimTable_Entry(Map_Monster_Anim_ID,Map_Monster_FrameData)


