
PUSH

    //Resolve a bug with backing out of battle forecast too fast
    ORG 0x22E64
    jumpToHack(BattleForecast_OnBPress)
    //Protect hooked function
    PROTECT 0x22E64 0x22E88
    
    //DSFE L Button cycling
    ORG 0x1DB4C
    SHORT 0xB500 //push {r14}

    ORG 0x1DB5A
    SHORT 0x7808 //ldrb r0, [r1]
    SHORT 0x4B02 //ldr r3 (FindNextCursorUnit)
    SHORT 0x469E //mov lr, r3
    SHORT 0xF800 //bl lr+0
    SHORT 0xBC01 //pop {r0}
    SHORT 0x4700 //bx {r0}
    SHORT 0
    POIN FindNextCursorUnit

    //Fast promo dings
    #define Time_Between_Stats 5 //default is 20

    ORG $7F464
    BYTE Time_Between_Stats
    ORG $741E0
    BYTE Time_Between_Stats+1
    
    //Halve map battle delay
    ORG $9A3528
    PROC_SLEEP(1)
    ORG $9A3540
    PROC_SLEEP(3)
    ORG $9A3568
    PROC_SLEEP(7)
    /* 
    //moved to PopupRework/PopRAnimsOff
    ORG $9A3608
    PROC_SLEEP(4)
    */
    ORG $9A3628
    PROC_SLEEP(4)
    
    //Halve Rounds delay on map battles
    ORG $9A47B4
    PROC_SLEEP(1)
    ORG $9A47C4
    PROC_SLEEP(4)
    ORG $9A480C
    PROC_SLEEP(10)
    
    //Faster map poison fx
    ORG $9A6FA0
    BYTE $4
    ORG $9A6FA4
    BYTE $4
    ORG $9A6FA8
    BYTE $4
    ORG $9A6FAC
    BYTE $4
    ORG $9A6FB0
    BYTE $4
    ORG $9A6FB4
    BYTE $4
    ORG $9A6FB8
    BYTE $3
    ORG $9A6FBC
    BYTE $3
    ORG $9A6FC0
    BYTE $2
    ORG $9A6FC4
    BYTE $2
    ORG $9A6FC8
    BYTE $2
    ORG $9A6FCC
    BYTE $1
    ORG $7A92E
    BYTE $50
    
    //Faster poison damage fx
    ORG $9A50AC
        PROC_SLEEP(30)
    ORG $9A50BC
        PROC_SLEEP(15)
    ORG $9A50CC
        PROC_SLEEP(5)
    
    //fast chapter titles
    ORG $59B1C0
        PROC_SLEEP(15)
    ORG $59B2D0
        PROC_SLEEP(15)
	
	//fast stealing
	ORG $9A32D8
		PROC_SLEEP(1)
	ORG $9A32E8
		PROC_SLEEP(1)
	ORG $9A32F0
		PROC_SLEEP(1)
	ORG $9A3348
		PROC_SLEEP(1)
	ORG $9A3388
		PROC_SLEEP(1)
	ORG $9A33B0
		PROC_SLEEP(1)

    #ifdef LANGUAGE_ES
        //Fix unit list Aid text for Spanish
        ORG $A17EB0
        BYTE $5E
        ORG $A17EC0
        BYTE $72
    #endif

    //Make objective window wider
    ORG $8D2F6
    BYTE $48
    ORG $8d2a6
    BYTE $09
    ORG $8d2b2
    BYTE $09

    //Make location window wider
    ORG $BE8FE
    BYTE $48
    ORG $BEFE4
    BYTE $09
    ORG $BEFF0
    BYTE $09
  
    //Objective display fix for skirmish
	ORG $8D2E8
	SHORT $202B $46C0
	ORG $95AAC
	SHORT $202B $46C0
    
    ORG $56558
    jumpToHack(FixBattleAnimeExitNoise)
POP


/*
  ORG $8D280
  POIN ObjectiveBoxTSA1
  POIN ObjectiveBoxTSA2

ALIGN 4
ObjectiveBoxTSA1:
SHORT $0C $05
SHORT $1A $1B $1C $1C $1C $1C $1C $1C $1C $1C $1C $20 $21
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $3E $40 $42 $44 $45
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $09 $3E $40 $42 $43
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $09 $09 $3E $40 $41
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $09 $09 $09 $3E $3F
SHORT $61 $62 $03 $03 $03 $31 $32 $33 $03 $03 $03 $04 $05

ALIGN 4
ObjectiveBoxTSA2:
SHORT $0C $03
SHORT $1A $1B $1C $1C $1C $1C $1C $1C $1C $1C $1C $20 $21
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $09 $09 $34 $36 $37
SHORT $06 $09 $09 $09 $09 $09 $09 $09 $09 $09 $09 $34 $35
SHORT $61 $62 $03 $03 $03 $31 $32 $33 $03 $03 $03 $04 $05
*/

//Update options menu to allow more displayed options
PUSH
    ORG $B1A32 
    BYTE 0xE //NumberOfOptionsToDisplay; was 0xD
    
    ORG $B1704
    SHORT $1852
    ORG $B19DA
    SHORT $6830 $8DC1 $39E0
    ORG $B1A2E
    SHORT $4652 $864A $200E $8688 $20E0 $854A $858A $85C8
    ORG $B1BE2
    BYTE 0x1
    ORG $B1BE6
    BYTE 0x1
    ORG $B1DAE
    BYTE 0x1
    ORG $B2190
    SHORT $1C45
    ORG $B21C6
    BYTE 0x1
    ORG $B21E6
    BYTE 0xA2 //move bottom text down to compensate
    ORG $B2380
    BYTE 0x20
    
    //move game speed
    ORG $B1E18
    POIN $B1F04
    ORG $B1F06
    BYTE $40
    ORG $B1F98
    POIN $B20FC
    ORG $B20FE
    BYTE $40

    ORG $B16F8
    POIN GameOptionsOrderList
    ORG $B1770
    POIN GameOptionsOrderList
    ORG $B17DC
    POIN GameOptionsOrderList
    ORG $B1848
    POIN GameOptionsOrderList
    ORG $B1910
    POIN GameOptionsOrderList
    ORG $B19F0
    POIN GameOptionsOrderList
    ORG $B1CD8
    POIN GameOptionsOrderList
    ORG $B1D68
    POIN GameOptionsOrderList
    ORG $B22E0
    POIN GameOptionsOrderList
    ORG $B2408
    POIN GameOptionsOrderList

POP

#define OptID_Animation 0x0
#define OptID_Terrain 0x1
#define OptID_MMB 0x2
#define OptID_Autocursor 0x3
#define OptID_TextSpeed 0x4
#define OptID_GameSpeed 0x5
#define OptID_Music 0x6
#define OptID_SoundFX 0x7
#define OptID_WindowColor 0x8
#define OptID_Unused1 0x9 //cpu level?
#define OptID_BattlePreview 0xA
#define OptID_SubtitleHelp 0xB
#define OptID_HPBars OptID_SubtitleHelp
#define OptID_Autoend 0xC
#define OptID_Unused2 0xD //unit colors
#define OptID_Objective 0xE
//controller 0xF and rank display 0x10

#ifndef Text_Options_On
    #define Text_Options_On 0xBD
    #define Text_Options_Off 0xBE
#endif

#define GameOptionsTable 0xA2E99C
#define GameOptionsEntry(EntryID, MainText, Selection1HelpText, Selection1Text, Pos_Sel1, Selection2HelpText, Selection2Text, Pos_Sel2, IconID)"PUSH; ORG GameOptionsTable+(44*EntryID); WORD MainText; SHORT Selection1HelpText Selection1Text; BYTE Pos_Sel1 0 0 0; SHORT Selection2HelpText Selection2Text; BYTE Pos_Sel2 0 0 0; SHORT 0 0 190 0 0 0 189 0; WORD IconID; POIN 0x80B1D14|1; POP"

ALIGN 4
GameOptionsOrderList:
BYTE OptID_Animation OptID_Unused2 OptID_GameSpeed OptID_TextSpeed OptID_Terrain OptID_Objective OptID_HPBars OptID_MMB OptID_BattlePreview OptID_Autocursor OptID_Autoend OptID_Music OptID_SoundFX OptID_WindowColor
BYTE $0 $0 //term
ALIGN 4


//Talk and Support don't end your turn
ALIGN 4
#include "ContemporaryTalkSupport/ContemporaryTalkSupport.event"

//HP Bars (and effective weapon warning)
ALIGN 4
#include "HpBars/HpBars.event"

//Danger Zone (select button)
ALIGN 4
#include "DangerZone/DangerZone.event"
  
//Negative stat boosts
ALIGN 4
#include "NegativeStatBoosts/NegativeStatBoosts.event"

//Weapon Crit 0xFF = Cannot Crit by Sme
ALIGN 4
#include "CannotCrit.lyn.event"
  
//Chapter names as text
ALIGN 4
#include "ChapterNamesAsText/Installer.event"
  
//Battle stats with anims off
ALIGN 4
#include "BattleStatswithAnimsOff/BattleStatsMasterEAFile.event"
  
//Map anims damage numbers
ALIGN 4
#include "DrawMapActionAnimation/Installer.event"

//Guide stuff
ALIGN 4
#include "Guide/GuideStuff.event"

//Pressing A on an enemy lets you move next to them and attack  
ALIGN 4
#include "MoveNextTo/MoveNextTo.event"
  
//Casual mode
ALIGN 4
#include "CasualMode/CasualMode.event"

//Game options menu
ALIGN 4
#include "StartingOptionsMenu/StartingOptionsMenu.event"

//Fix minimug palette flash (by Huichelaar)
ALIGN 4
#include "MinimugPaletteFix/Installer.event"

//Show heal amount and use item might for heal amount
ALIGN 4
#include "HealStaffStuff/HealStaffStuff.event"

ALIGN 4
BattleForecast_OnBPress:
#incbin "BattleForecastFix.dmp"

ALIGN 4
FindNextCursorUnit:
#incbin "FindNextCursorUnit.dmp"

ALIGN 4
FixBattleAnimeExitNoise:
#incbin "FixBattleAnimeExitNoise.dmp"

//Post game turn counts
ALIGN 4
#include "TurnCountRecord/Installer.event"

//Clear rescued units during "clear all of allegiance" commands
ALIGN 4
#include "NewClearUnit/NewClearUnit.event"
