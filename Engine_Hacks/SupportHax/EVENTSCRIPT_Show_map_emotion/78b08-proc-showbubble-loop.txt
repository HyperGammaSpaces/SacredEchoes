08078B08 B5F0   PUSH {r4,r5,r6,r7,lr}   //Loop6C_89A2968_1
08078B0A 464F   MOV r7, r9
08078B0C 4646   MOV r6, r8
08078B0E B4C0   PUSH {r6,r7}
08078B10 B081   SUB SP, #0x4
08078B12 1C07   MOV r7 ,r0
08078B14 1C3C   MOV r4 ,r7
08078B16 3464   ADD r4, #0x64
08078B18 8820   LDRH r0, [r4, #0x0]
08078B1A 1C41   ADD r1 ,r0, #0x1
08078B1C 8021   STRH r1, [r4, #0x0]
08078B1E 0400   LSL r0 ,r0 ,#0x10
08078B20 1400   ASR r0 ,r0 ,#0x10
08078B22 2807   CMP r0, #0x7
08078B24 DD02   BLE #0x8078B2C
    08078B26 1C38   MOV r0 ,r7
    08078B28 F78A F9B4   BL 0x08002E94   //Break6CLoop
08078B2C 2180   MOV r1, #0x80
08078B2E 0089   LSL r1 ,r1 ,#0x2
08078B30 2280   MOV r2, #0x80
08078B32 0052   LSL r2 ,r2 ,#0x1
08078B34 2000   MOV r0, #0x0
08078B36 5E23   LDSH r3, [r4, r0]
08078B38 2008   MOV r0, #0x8
08078B3A 9000   STR r0,[SP, #0x0]
08078B3C 2005   MOV r0, #0x5
08078B3E F79A F945   BL 0x08012DCC
08078B42 4680   MOV r8, r0
08078B44 4C20   LDR r4, [PC, #0x80] # pointer:08078BC8 -> 080D751C (Lookup Table for sin (0 -> 0x100 -> 0 -> -0x100 -> 0) )
08078B46 2180   MOV r1, #0x80
08078B48 1909   ADD r1 ,r1, R4
08078B4A 4689   MOV r9, r1
08078B4C 2200   MOV r2, #0x0
08078B4E 5E88   LDSH r0, [r1, r2] # pointer:080D759C (Lookup Table for cos (0x100 -> 0 -> -0x100 -> 0 -> 0x100) ) -> 0FFE1000
08078B50 0100   LSL r0 ,r0 ,#0x4
08078B52 4641   MOV r1, r8
08078B54 F058 FD92   BL 0x080D167C   //Div
08078B58 1C06   MOV r6 ,r0
08078B5A 0436   LSL r6 ,r6 ,#0x10
08078B5C 1436   ASR r6 ,r6 ,#0x10
08078B5E 2100   MOV r1, #0x0
08078B60 5E60   LDSH r0, [r4, r1] # pointer:080D751C (Lookup Table for sin (0 -> 0x100 -> 0 -> -0x100 -> 0) ) -> 00640000
08078B62 4240   NEG r0 ,r0
08078B64 0100   LSL r0 ,r0 ,#0x4
08078B66 4641   MOV r1, r8
08078B68 F058 FD88   BL 0x080D167C   //Div
08078B6C 1C05   MOV r5 ,r0
08078B6E 042D   LSL r5 ,r5 ,#0x10
08078B70 142D   ASR r5 ,r5 ,#0x10
08078B72 2200   MOV r2, #0x0
08078B74 5EA0   LDSH r0, [r4, r2] # pointer:080D751C (Lookup Table for sin (0 -> 0x100 -> 0 -> -0x100 -> 0) ) -> 00640000
08078B76 0100   LSL r0 ,r0 ,#0x4
08078B78 4641   MOV r1, r8
08078B7A F058 FD7F   BL 0x080D167C   //Div
08078B7E 1C04   MOV r4 ,r0
08078B80 0424   LSL r4 ,r4 ,#0x10
08078B82 1424   ASR r4 ,r4 ,#0x10
08078B84 4649   MOV r1, r9
08078B86 2200   MOV r2, #0x0
08078B88 5E88   LDSH r0, [r1, r2] # pointer:080D759C (Lookup Table for cos (0x100 -> 0 -> -0x100 -> 0 -> 0x100) ) -> 0FFE1000
08078B8A 0100   LSL r0 ,r0 ,#0x4
08078B8C 4641   MOV r1, r8
08078B8E F058 FD75   BL 0x080D167C   //Div
08078B92 0400   LSL r0 ,r0 ,#0x10
08078B94 1400   ASR r0 ,r0 ,#0x10
08078B96 9000   STR r0,[SP, #0x0]
08078B98 2000   MOV r0, #0x0
08078B9A 1C31   MOV r1 ,r6
08078B9C 1C2A   MOV r2 ,r5
08078B9E 1C23   MOV r3 ,r4
08078BA0 F789 FB06   BL 0x080021B0   //WriteOAMRotScaleData
08078BA4 6D38   LDR r0, [r7, #0x50]
08078BA6 6AF9   LDR r1, [r7, #0x2C]
08078BA8 3908   SUB r1, #0x8
08078BAA 6B3A   LDR r2, [r7, #0x30]
08078BAC 3A08   SUB r2, #0x8
08078BAE 23C0   MOV r3, #0xC0
08078BB0 009B   LSL r3 ,r3 ,#0x2
08078BB2 431A   ORR r2 ,r3
08078BB4 F790 FB82   BL 0x080092BC   //TCS_Update Updates TCS Logic and Graphics bool r0=TCS r1=display x r2=display y
08078BB8 B001   ADD SP, #0x4
08078BBA BC18   POP {r3,r4}
08078BBC 4698   MOV r8, r3
08078BBE 46A1   MOV r9, r4
08078BC0 BCF0   POP {r4,r5,r6,r7}
08078BC2 BC01   POP {r0}
08078BC4 4700   BX r0
08078BC6 0000   NOP
08078BC8 751C 080D   //LDRDATA
