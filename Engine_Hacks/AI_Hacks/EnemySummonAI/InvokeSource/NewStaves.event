PUSH

	
	//Change usability routine for Hammerne to be Invoke
	ORG $28B2C	//old Hammerne
		New_Use(InvokeStaff_RangeSetup)
		
	ORG $299BA; BL(Invoke_Jump)
	
	//08029a08 HammerneTargetSelection_OnChange - nop out 29a20
	ORG $29A1C
	WORD 0
	WORD 0
	
	//08029a2c HammerneTargetSelection_OnInit - just nop this out
	ORG $29A2E
	SHORT 0
	SHORT 0
	
	//59D3B8
	//08029944 HammerneTargetSelection_OnSelect
	
	//080299b8 SetupHammerneUseSelection
	
	//2f2b4 - replace with InvokeOnSelect
	//2900E - change to a BL to 2951c
	
	ORG $29944
	InvokeOnSelect:
	#incbin "InvokeOnSelect.dmp"
	ORG $2F2B4
	SHORT $B570 $BC70 $BC01 $4700 //does nothing
	
	//Invoke P4
	ORG $2900E
	BL(InvokeOnSelect)
	
	ORG $262A8
	Invoke_Jump:
		SHORT 0xB500 0x1C22 0x4902
		BL($D18C4)
		SHORT 0xBC01 0x4700 0x0
		POIN InvokeStaff_RangeSetup|1
	
	
	ORG $7AD1C
	#incbin "DoInvoke.dmp"
	POIN SummonTable
	
	//Switch Summon proc to DKSummon proc
	ORG $7B794
	WORD $089A33C0
	
	//Specify Invoke as non-healing staff
	//Invoke
	ORG $725C4
	POIN $080726A4
	
	/*
	Don't draw portrait on item select menu if unit is generic
	
	change these from this:
	08022BE8 6848   LDR r0, [r1, #0x4] r1=Unit
	08022BEA 7900   LDRB r0, [r0, #0x4]
	08022BEC 2851   CMP r0, #0x51
	
	to this:
	08022BE8 6808   LDR r0, [r1, #0x0] r1=Unit
	08022BEA 88C0   LDRH r0, [r0, #0x6]
	08022BEC 2800   CMP r0, #0x0
	*/
	
	//Don't draw portrait on item select menu if unit is generic
	ORG $22BE8
	SHORT $6808 $88C0 $2800
	
	//Remove hardcoded checks for phantom class - use 0x3F as summon unit ID
	ORG $18EDA
	SHORT $6810 $7900 $283F
	ORG $23046
	SHORT $6811 $7909 $1C04 $293F
	ORG $232C8
	SHORT $6810 $7900 $283F
	ORG $23F74
	SHORT $6800 $7900 $283F
	ORG $23FDE
	SHORT $6810 $7900 $283F
	ORG $2403A
	SHORT $6810 $7900 $283F
	ORG $24096
	SHORT $6810 $7900 $283F
	ORG $2523A
	SHORT $6810 $7900 $283F
	ORG $25242
	SHORT $6823 $7918 $283F
	ORG $3122A
	SHORT $6808 $7900 $283F
	
	//Update Trade command to block summoned units
	//ORG $22F38
	//jumpToHack(NewTradeUsability)
	//ORG $25518
	//jumpToHack(NewGiveToEligibility)
	
	//don't let summons rescue/take
	//ORG $59CD34
	//POIN NewRescueMenuUsability|1
	//ORG $59CD7C
	//POIN NewTakeUsability|1
	
	//Change DKSummon to use Summon Rework
	ORG $9A33CC
	POIN StartMultiSummon|1
	ORG $9A33EC
	POIN NewMultiSummon|1
	ORG $9A341C
	POIN NewMultiSummon|1
	ORG $9A344C
	POIN NewMultiSummon|1
	ORG $9A347C
	POIN NewMultiSummon|1
	ORG $7AFFC
	replaceWithHack(NewGetRAMSlot)
	
	ORG $7B1C0
	#incbin "NewHandleSummonBatch.dmp"
	
	ORG $7B090
	#incbin "NewGetSummonPositions.dmp"
	
	//Bring summons closer
	ORG $7B23E
	BYTE $01
	ORG $7B25A
	BYTE $01
	ORG $7B27A
	BYTE $01
	ORG $7B29E
	BYTE $01

POP

//Invoke stuff

StartMultiSummon:
#incbin "StartMultiSummon.dmp"
ALIGN 4

NewGetRAMSlot:
#incbin "NewGetRAMSlot.dmp"
ALIGN 4

NewMultiSummon:
#incbin "DoInvokeMulti.dmp"
POIN SummonTable
ALIGN 4

InvokeStaff_RangeSetup:
	SHORT 0xB500 0x4903		//load usability routine
	SHORT 0x4803 0x6800		//Load unitID into r0
	BL(Item_TTRange)		//Check tiles in range
	SHORT 0xBC08 0x4718		//pop and exit
	POIN (0x25C34 | 1)		//Usability routine
	WORD 0x03004E50			//unit pointer
ALIGN 4

SummonTable:
BYTE Silque 	0x3F 	DreadFighter 	0
BYTE Tatiana 	0x3F 	PegasusKnight 	0
BYTE Genny 		0x3F 	Soldier 		0
BYTE 0x7B 		0xAA 	Revenant 		0			//some generic enemy
BYTE 0 			0 		0 				0

//For Invoke: range 1-3, need to use Summon functions and increase the number of squares used to 8. Use RN to select a number between [Level/4+1] and 8 to determine number of summons, capped by [eligible clean squares]. 24 squares available from 1-3

/*

[ ][ ][ ][1][ ][ ][ ]
[ ][ ][2][3][4][ ][ ]
[ ][5][6][7][8][9][ ]
[A][B][C][U][D][E][F]
[ ][0][1][2][3][4][ ]
[ ][ ][5][6][7][ ][ ]
[ ][ ][ ][8][ ][ ][ ]

*/

