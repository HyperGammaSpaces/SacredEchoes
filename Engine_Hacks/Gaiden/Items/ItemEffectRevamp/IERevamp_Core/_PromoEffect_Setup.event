#ifndef ItemEffectRevamp
	#define ItemEffectRevamp
#endif

#include "Extensions/Hack Installation.txt"

#ifdef _FE8_
	#ifndef IDListCheck
		#define IDListCheck
		IDListLoop:
		#incbin "asm/ItemEffect_ListCheck.dmp"
		POIN Item_GetStat_EffectID | 1
	#endif
	
	ALIGN 4
    
	PromoLordCheck:
	#include "asm/PromoCheck_FlagSkip.lyn.event"
	BYTE $0 $20 $0 $0	//character/class ability bits to compare against

	ALIGN 4
	PitchforkCheck:
	SHORT $B500			//push r14
	SHORT $2003			//mov r0, r3
	SHORT $BC08 $4718	//pop r3; bx r3
	
	ALIGN 4
	PrepPromoEffectCheck:
	SHORT $B500			//push r14
	SHORT $4902			//ldr r1
	BL(IDListLoop)
	SHORT $BC02 $4708	//pop r1; bx r1
	ALIGN 4
	POIN PromoEffectList
	
	PUSH

		ORG $1D1E8
		//check if promo item effect
		SHORT $46C0		//nop
		SHORT $1C10		//mov r0, r2
		callHack_r3(PrepPromoEffectCheck)
		SHORT $2800		//cmp r0, $0
		SHORT (BLRange($1D214) & $FF) | $D000 	//beq
		B($1D230)

		ORG $291A8
		#include "asm/PromoItemUsability.lyn.event"
		PROTECT $291A8 $2922C
		
		//Prep Screen Promotion Item Usage
		ORG $9CB38
		SHORT $B530 	//push r4-r5, r14
		
		ORG $9CB4C
		//check if juna fruit effect
		SHORT $1C05	//mov r5, r0
		BL(Item_GetStat_EffectID)
		SHORT $2836	//cmp r0, $36	@check if juna fruit
		SHORT (BLRange($9CB98) & $FF) | $D000 	//beq
		
		//check if promo item effect
		SHORT $1C28	//mov r0, r5
		callHack_r3(PrepPromoEffectCheck)
		SHORT $2800	//cmp r0, $0
		SHORT (BLRange($9CBA0) & $FF) | $D000 	//beq
		B($9CB78)
		
		ORG $9CBA0
		SHORT $BC30	//pop r4-r5
	POP
	
#else
	ERROR "FE8 only"
#endif
