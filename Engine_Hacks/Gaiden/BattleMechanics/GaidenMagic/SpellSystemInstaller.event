#ifndef FreeSpace
  #define FreeSpace 0xb2a610
  ORG FreeSpace
  #include "Extensions/Hack Installation.txt"
#endif

#include "spell_costs.event"
#include "SpellSystem.event"
#include "NewStaves/NewStaves.event"

//include Echoes spells if defined, otherwise include only vanilla
#ifdef Sagittae
  #include "spell_lists.event"
#else
  #ifndef Fire
    #include "EA Standard Library/FE8 Definitions.txt"
  #endif
  #include "vanilla_spell_lists.event"
#endif

//swap B.Magic and W.Magic so B.Magic comes first (like vanilla Attack)
#define SWITCH_MAG_COMMAND_POS 0x1

//put code for menu option usability here

AttackUMCommand:
#incbin "DisableAttackForAlliedMages.dmp"
ALIGN 4
MagicUMCommandUsability:
#incbin "MagicUMCommand.dmp"
POIN Spells_Getter
ALIGN 4
MagicUMCommandEffect:
#incbin "MagicUMCommandEffect.dmp"
POIN BuildSelectSpellMenu
POIN MagicMenuDefs
WORD SelectedSpellPointer
ALIGN 4
MagicUMCommandHover:
#ifndef Teraspark_Range_Fixes
	#incbin "MagicUMCommandHover.dmp"
#else
	#incbin "MagicUMCommandHover-terafix.dmp"
#endif
WORD SelectedSpellPointer
POIN All_Weapons_One_Square
ALIGN 4
MagicUMCommandUnhover:
#incbin "MagicUMCommandUnhover.dmp"
WORD SelectedSpellPointer
ALIGN 4

StaffUMCommandUsability:
#incbin "StaffCommandUsability.dmp"
POIN Spells_Getter
ALIGN 4
StaffUMCommandEffect:
#incbin "MagicUMCommandEffect.dmp" //we can reuse this, it just spawns a menu
POIN BuildSelectSpellMenu
POIN StaffMenuDefs
WORD SelectedSpellPointer
ALIGN 4
StaffUMCommandHover:
#ifndef Teraspark_Range_Fixes
	#incbin "StaffUMCommandHover.dmp"
#else
	#incbin "StaffUMCommandHover-terafix.dmp"
#endif
WORD SelectedSpellPointer
POIN All_Staffs_One_Square
ALIGN 4

SpellRangeDisplayFix:
#incbin "ShowSpellRange.dmp"
POIN Spells_Getter
WORD SelectedSpellPointer
ALIGN 4

StaffRangeDisplayFix:
#incbin "ShowStaffRange.dmp"
POIN Spells_Getter
WORD SelectedSpellPointer
ALIGN 4

PUSH

#ifndef Teraspark_Range_Fixes
	//Range Display updates
	ORG 0x0171e8
	replaceWithHack((SpellRangeDisplayFix+1))

	ORG 0x01723C
	replaceWithHack((StaffRangeDisplayFix+1))
#endif

//Unit menu offsets in case UnitMenuDefs aren't present
#ifndef UM_Attack
  //#define UM_Attack_Definition 0x59CA58
  //#define UM_BMagic_Definition 0x59CAA0
  //#define UM_WMagic_Definition 0x59CB0C
#endif

//Update attack command to hide if unit doesn't have a physical weapon

ORG UM_Attack_Definition+0xC
	POIN AttackUMCommand+1

//Updating menu defs
ORG UM_BMagic_Definition
	POIN $D7E8C 
	SHORT Cmd_BMagic
	SHORT Desc_Cmd_BMagic
	BYTE  NormalText
	BYTE  $54
	SHORT 0
	POIN MagicUMCommandUsability+1
	WORD 0
	POIN MagicUMCommandEffect+1
	WORD 0
	POIN MagicUMCommandHover+1
	POIN MagicUMCommandUnhover+1

ORG UM_WMagic_Definition
	POIN $D7E8C 
	SHORT Cmd_WMagic
	SHORT Desc_Cmd_WMagic
	BYTE  NormalText
	BYTE  $51
	SHORT 0
	POIN StaffUMCommandUsability+1
	WORD 0
	POIN StaffUMCommandEffect+1
	WORD 0
	POIN StaffUMCommandHover+1
	POIN MagicUMCommandUnhover+1

POP
