#include "InvokeStaff/Invoke Installer.event"
#include "ExpelStaff/Expel Installer.event"

PUSH
	//Target selection changes
	ORG $28FAC 		//Entrap Staff
	EntrapStaffP4Jump:
		SHORT $4900
		B(RescueStaff_CallTargetingFunc)
		POIN EntrapStaff_RangeSetup|1
	RewarpStaffP4Jump:
		SHORT $4900
		B(RescueStaff_CallTargetingFunc)
		POIN RewarpStaff_RangeSetup|1
	RescueStaffP4Jump:
		SHORT $4902 
	RescueStaff_CallTargetingFunc:
		SHORT $1C28	//mov r0, r5
		SHORT $1C22	//mov r2, r4
		BL($29568)
		B(P4Ladder_End)
		POIN RescueStaff_RangeSetup|1
	RestoreStaffP4Jump:
		SHORT $4902 $1C28 $1C22
		BL($29BC8)
		B(P4Ladder_End)
		POIN RestoreStaff_RangeSetup|1
	SilenceStaffP4Jump:
		SHORT $4900
		B(StatusStaff_CallTargetingFunc)
		POIN SilenceStaff_RangeSetup|1
	FreezeStaffP4Jump:
		SHORT $4902
	StatusStaff_CallTargetingFunc:
		SHORT $1C28	//mov r0, r5
		SHORT $1C22	//mov r2, r4
		BL($29CA0)  //TargetSelectionForOffensiveStaff
		B(P4Ladder_End)
		POIN SleepStaff_RangeSetup|1
	UnlockStaffP4Jump:
		SHORT $4901 $4A02 $1C23 
		B(TileTargetingFuncJump)
		POIN Unlock_Jump|1
		WORD 0x87A	//target select help text
	WarpStaffP4Jump:
		SHORT $1C28	//mov r0, r5
		BL($2987C)	//SetupWarpTargetSelection
		B(P4Ladder_End)
	InvokeStaffP4Jump:
		SHORT $1C28
		BL(InvokeOnSelect)
		B(P4Ladder_End)
	FortifyStaffP4Jump:
		SHORT $1C28 //mov r0, r5
		BL($2951C)	//EndItemEffectSelectionThing
		B(P4Ladder_End)
	MineP4Jump:
		SHORT $4901
		SHORT $4A02
		B(TileTargetingFuncJump)
		ALIGN 4
		POIN $264F0+1
		WORD 0x87D
	LightRuneP4Jump:
		SHORT $4902
		SHORT $4A03
		TileTargetingFuncJump:
		SHORT $1C28
		BL($298F0)	//PrepareTargetSelectionForMineAndLightRune
		B(P4Ladder_End)
		POIN $26580+1
		WORD 0x87E
	TorchStaffP4Jump:
		SHORT $1C28	//mov r0, r5
		BL($29ED8)	//NewTorchStaffSelection
		B(P4Ladder_End)
	AnewP4Jump:
		SHORT $4902
		SHORT $1C28
		SHORT $1C22
		BL($295A8)	//SetupTargetSelectionForGenericStaff
		B(P4Ladder_End)
		POIN AnewStaff_RangeSetup|1
		WORD 0x870
	NoTargetRoutineP4Jump:
		SHORT $1C28
		BL($29544)
	P4Ladder_End:
		SHORT $BC30 $BC01 $4700 //pop r4-r5 and bx r0
		
	//Moving around some use pointers
	ORG $28E8C					//first entry (heal)
	ItemTargetSelectionCases:
	POIN $28F94					//heal
	POIN FortifyStaffP4Jump		//expel
	POIN $28F94					//recover
	POIN $28F9C					//physic
	POIN FortifyStaffP4Jump
	POIN RestoreStaffP4Jump
	POIN SilenceStaffP4Jump
	POIN FreezeStaffP4Jump
	POIN EntrapStaffP4Jump
	POIN WarpStaffP4Jump 
	POIN RescueStaffP4Jump
	POIN TorchStaffP4Jump 
	POIN InvokeStaffP4Jump 
	POIN UnlockStaffP4Jump
	POIN RescueStaffP4Jump		//rewarp
	POIN AnewP4Jump			 	//new (5A) anew
	
	ORG $28F90					//old (8C) anew
	POIN FortifyStaffP4Jump
	
	//Force battle anims off for certain staff
	ORG $581D0
	SHORT $2A4C $D003 //beq 0x4C
	SHORT $2A53 $DB03 //blt 0x53
	SHORT $2A59 $DC01 //bgt 0x59
	
	
	//Actual function changes below
	
	//Show heal amount
	ORG $24670
	SHORT $4B00 $469F
	POIN ShowHealAmount
	
	//Heal by item might
	ORG $16FB8
	HealByMight:
	#incbin "HealByMight.dmp"

	//2f010 - status staves func
	ORG $2F050
	jumpToHack(Status_Staff_HP)
	
	//624D4 - Silence - start EFXHpBar - not working yet
	ORG $624D4
	jumpToHack(SilenceFix)
	
	//62768 - Sleep - startEFXHpBar - not working yet
	ORG $62768
	jumpToHack(SleepFix)
	
	//Torch - 2FB88
	ORG $2FB88
	SHORT $B570 //push {r4-r6, r14}
	ORG $2FB94
	jumpToHack(TorchFix)
	ORG $2FBB0
	SHORT $BC70 //pop {r4-r6}
	
	//Unlock - make it work on chests too
	ORG $28B3C	//Unlock usability check
		New_Use(UnlockStaff_RangeSetup)
	ORG $26080
	Unlock_Jump:
		SHORT 0xB500 0x1C1A 0x4902	//push {lr}; mov r2, r3; ldr r1,=POIN;
		BL($D18C4)	//bl to bx r1
		SHORT 0xBC01 0x4700 0x0
		POIN UnlockStaff_RangeSetup|1
	
	//Unlock Effect - 2f274 - edit this to deplete HP
	ORG $2F274
	SHORT $B570 //push {r4-r6, r14}
	ORG $2F280
	jumpToHack(UnlockFix)
	ORG $2F2A4
	SHORT $BC70 //pop {r4-r6}
	
	//Fix warp target selection
	ORG $59BA14
	POIN NewWarpTargetSelectCancel+1

	ORG $59B9EC
	POIN NewWarpTargetSelectConfirm+1
	
	//Mess with rescue staff
	ORG $295A0
	POIN NewRescueSelectFunc+1
	
	//Entrap - replace Berserk
	ORG $28B0C	//Entrap
		New_Use(EntrapStaff_RangeSetup)
	ORG $26198
	EntrapTargetRoutine:
	#incbin "entraptarget.dmp"

	ORG $2FCB0 //entrap effect pointer
	POIN $2FE94 //rescue effect
	
	//Rewarp
	//This has to be in BL range
	ORG $28ADC
	RewarpUsabilityCheck:
		New_Use(RewarpStaff_RangeSetup)
	ORG $2FE9C
	RewarpEffectCheck:
		SHORT $1C30	//mov r0, r6
		BL(RewarpEffect)
		B($2FF76)
	ORG $2EC8C
	RewarpEffect:
		replaceWithHack(Rewarp_Setup)
	//Repoint usability table entry
	ORG $288E8
	POIN RewarpUsabilityCheck
	//Effect table entry
	ORG $2FCC8
	POIN RewarpEffectCheck
	
	//Anew
	ORG $295A8
		BL($D18C4)
		SHORT $480A $6800 $2101 $4249
		BL($197E4)
		SHORT $4808 $4909
		BL($4FAA4)
		SHORT $1C04 $4808
		BL($A240)
		SHORT $1C01 $1C20
		BL($35708)
		SHORT $BC30 $BC01 $4700
		ALIGN 4
		WORD $202e4e0 $859d2f8 $8029551 $870
	ORG $28B98
	AnewUsabilityCheck:
		New_Use(AnewStaff_RangeSetup)
	ORG $2FF68
	AnewEffectCheck:
		SHORT $1C30
		BL($2FBBC)
		B($2FF76)
	ORG $2FBBC
	AnewEffect:
		#incbin "AnewSetup.dmp"
		WORD SelectedSpellPointer
	//New usability table entry (5A)
	ORG $288EC
	POIN AnewUsabilityCheck
	//New effect table entry	(5A)
	ORG $2FCCC
	POIN AnewEffectCheck
	
POP	

//Healing staves
ALIGN 4
ShowHealAmount:
#incbin "ShowHealAmount.dmp"
WORD HP_Restore_Arrow
WORD SelectedSpellPointer

//Status staves
ALIGN 4
Status_Staff_HP:
#incbin "status_staff_hp.dmp"
POIN SpellCostGetter
ALIGN 4

SilenceFix:
#incbin "silencefix.dmp"
ALIGN 4
SleepFix:
#incbin "sleepfix.dmp"
ALIGN 4

//Torch
TorchFix:
#incbin "torchfix.dmp"
WORD SelectedSpellPointer
POIN SpellCostGetter
ALIGN 4

//Unlock
UnlockStaff_RangeSetup:
	rfItemRangeSetup(TryAddToUnlockTargetList+1,Item_TTRange)
ALIGN 4

TryAddToUnlockTargetList:
#incbin "TryAddToUnlockTargetList.dmp"
ALIGN 4

UnlockFix:
#incbin "unlockfix.dmp"
WORD SelectedSpellPointer
POIN SpellCostGetter
ALIGN 4

UnlockEffectFix: //formerly at 7e79c
#incbin "unlockeffect.dmp"
ALIGN 4

//Entrap
EntrapStaff_RangeSetup:
	rfItemRangeSetup(0x26199,Item_TURange)

//Rewarp
RewarpStaff_RangeSetup:
	rfItemRangeSetup(TryAddUnitToRewarpTargetList+1,Item_TURange)
ALIGN 4
TryAddUnitToRewarpTargetList:
#incbin "RewarpUsabilityCheck.dmp"
ALIGN 4
Rewarp_Setup:
#incbin "rewarpsetup.dmp"
WORD SelectedSpellPointer
ALIGN 4
//need to make new map anim proc

RewarpMapAnimProc: //formerly at $089A5214
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectUnitWarpRing+1	//Call Routine [ASM:0x8081B71 MapAnim_TargetUnitWarpRing]
SHORT $E; SHORT $A; 	WORD $0	//Sleep for 10 frames
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectUnitFlashOut+1	//Call Routine [ASM:0x8081CD5 MapAnim_TargetUnitFlashOut]
SHORT $E; SHORT $14; 	WORD $0	//Sleep for 20 frames
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectStarExplosion+1	//Call Routine [ASM:0x8081D41 MapAnim_TargetStarExplosion]
SHORT $E; SHORT $2; 	WORD $0 //Sleep for 2 frames
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectHide+1	//Call Routine [ASM:0x8081D1D MapAnim_TargetHide]
SHORT $E; SHORT $8; 	WORD $0	//Sleep for 8 frames
SHORT $2; SHORT $0; 	POIN MapAnim_MoveSubjectForWarp+1	//Call Routine [ASM:0x8081E05 MapAnim_MoveTargetForWarp]
SHORT $E; SHORT $1E; 	WORD $0 //Sleep for 30 frames
SHORT $2; SHORT $0; 	POIN MapAnim_MoveCameraOnWarpSubject+1	//Call Routine [ASM:0x80815ED MapAnim_MoveCameraOnWarpTarget]
SHORT $E; SHORT $2; 	WORD $0	//Sleep for 2 frames
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectStarImplosion+1	//Call Routine [ASM:0x8081D85 MapAnim_TargetStarImplosion]
SHORT $E; SHORT $28; 	WORD $0	//Sleep for 40 frames
SHORT $2; SHORT $0; 	POIN MapAnim_WarpSubjectWarpRing+1	//Call Routine [ASM:0x8081BCD MapAnim_WarpTargetWarpRing]
SHORT $E; SHORT $A; 	WORD $0	//Sleep for 10 frames
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectShow+1	//Call Routine [ASM:0x8081DE1 MapAnim_TargetShow]
SHORT $2; SHORT $0; 	POIN MapAnim_SubjectUnitFlashIn+1	//Call Routine [ASM:0x8081CF9 MapAnim_TargetUnitFlashIn]
SHORT $E; SHORT $10; 	WORD $0	//Sleep for 16 frames
SHORT $E; SHORT $A; 	WORD $0	//Sleep for 10 frames
SHORT $2; SHORT $0; 	POIN ClearBattleChangeData+1	//Call Routine [ClearBattleChangeData]
SHORT $E; SHORT $1E; 	WORD $0	//Sleep for 30 frames
WORD $0; WORD $0	//End (Deletes Self)

MapAnim_SubjectUnitWarpRing:
#incbin "RewarpProc/MapAnim_SubjectUnitWarpRing.dmp"
ALIGN 4
MapAnim_SubjectUnitFlashOut:
#incbin "RewarpProc/MapAnim_SubjectUnitFlashOut.dmp"
ALIGN 4
MapAnim_SubjectStarExplosion:
#incbin "RewarpProc/MapAnim_SubjectStarExplosion.dmp"
ALIGN 4
MapAnim_SubjectHide:
#incbin "RewarpProc/MapAnim_SubjectHide.dmp"
ALIGN 4
MapAnim_MoveSubjectForWarp:
#incbin "RewarpProc/MapAnim_MoveSubjectForWarp.dmp"
ALIGN 4
MapAnim_MoveCameraOnWarpSubject:
#incbin "RewarpProc/MapAnim_MoveCameraOnWarpSubject.dmp"
ALIGN 4
MapAnim_SubjectStarImplosion:
#incbin "RewarpProc/MapAnim_SubjectStarImplosion.dmp"
ALIGN 4
MapAnim_WarpSubjectWarpRing:
#incbin "RewarpProc/MapAnim_WarpSubjectWarpRing.dmp"
ALIGN 4
MapAnim_SubjectShow:
#incbin "RewarpProc/MapAnim_SubjectShow.dmp"
ALIGN 4
MapAnim_SubjectUnitFlashIn:
#incbin "RewarpProc/MapAnim_SubjectUnitFlashIn.dmp"
ALIGN 4
ClearBattleChangeData:
#incbin "RewarpProc/MapAnim_ClearCoords.dmp"
ALIGN 4

//Anew
AnewStaff_RangeSetup:
	rfItemRangeSetup($25B18+1,Item_TURange)
ALIGN 4

NewWarpTargetSelectCancel:
#incbin "NewWarpTargetSelectCancel.dmp"
WORD SelectedSpellPointer
ALIGN 4

NewWarpTargetSelectConfirm:
#incbin "warppositionconfirm.dmp"
ALIGN 4

NewRescueSelectFunc:
#incbin "rescueeffect.dmp"
WORD SelectedSpellPointer
POIN SpellCostGetter+1
ALIGN 4
