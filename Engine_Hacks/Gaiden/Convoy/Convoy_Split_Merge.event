//Convoy separation (and weapon repair when pressing L while putting an item in the convoy)
//by Tequila

#ifndef _FE8_
	ERROR "Wrong ROM. Use FE8U."
#endif

#include "Extensions/Hack Installation.txt"
#include "Extensions/ProcDefinitions.event"

//NOTE: This hack does NOT expand the amount of items saved! It changes the items you can have, yes, but you're responsible for using Modular Save or some other hack to actually save more stuff.

#ifndef gConvoyItemArray
	#define gConvoyItemArray $0203B200
#endif

#define ConvoyTotalSize 200
#define gChapterData $0202BCF0

#define ConvoyPartition(start_slot, length, function) "BYTE start_slot length 0 0; POIN function"

ConvoyPartitionTable:
//ConvoyPartition(10, 90, IsEirika|1)
ConvoyPartition(0, 100, CanUseAlmConvoy|1) //alm side
ConvoyPartition(100, 100, CanUseCelicaConvoy|1) //celica side
WORD 0 //terminator

//Proc storage +2C has active unit RAM pointer. Need to store in 0x3004E50 before calling supply screen.
//A20c1c +2C?

//A1920c is our supply proc. And active unit is still at +2C

//Kliff and Faye will be handled separately.
AlmModeUnits:
BYTE Alm Lukas Gray Tobin Silque Clair Clive Forsyth Python
BYTE Luthier Mathilda Delthea Tatiana Zeke Mycen Acantha FernandPlayable
BYTE $40 //terminator
ALIGN 4

CelicaModeUnits:
BYTE Celica Mae Boey Genny Saber Valbar Leon Kamui 
BYTE Palla Catria Atlas Jesse Deen Sonya Est Conrad Nomah Hyas
BYTE $40 //terminator
ALIGN 4

PUSH

//GetConvoyItemArray
ORG $31500
jumpToHack(GetConvoyPartitionStartOffset)

//ClearConvoyItems (all items)
ORG $31524
WORD gConvoyItemArray
WORD 0x1000000 + ConvoyTotalSize

//Clear convoy partition, rather than the whole thing
ORG $31554; BL(jumpToClearConvoyPartition) //ShrinkConvoyItemList, which never seems to be used, but including this anyway
ORG $982BA; BL(jumpToClearConvoyPartition)
ORG $982FE; BL(jumpToClearConvoyPartition)

ORG $31570
jumpToHack(GetConvoyItemCount)

ORG $31594
jumpToHack(AddItemToConvoy)
//ORG $3159C
GetConvoyItemArrayStart:		//Adding this here because there's room
SHORT 0x4800 0x4770
WORD gConvoyItemArray
jumpToClearConvoyPartition:		//^
jumpToHack(ClearConvoyPartition)
//jumpToStartCombine:				//^
//jumpToHack(StartCombineDisplayProc)

//This function looks like it should be called RemoveItemFromConvoy, but it doesn't appear to be called from anywhere. We shall update the convoy array pointer anyway, just in case.
ORG $315E0
POIN gConvoyItemArray

ORG $315E4
jumpToHack(GetConvoyItemSlot)

//Make partition funcs work properly on prep screen
ORG $9EAD8
replaceWithHack(Hook_9EAD8)

//greying out the word Give
ORG $9D674
callHack_r3(Hook_9D674)

//glowy green for number of items check
ORG $9D738
callHack_r3(Hook_9D738)

//draw max number of items number
ORG $9D764
callHack_r3(Hook_9D764)

//check if convoy is full, and return to Give/Take menu if yes
ORG $9E8F4
callHack_r3(Hook_9E8F4)
SHORT 0x46C0 0x2800 0xD01A //nop; cmp r0,#0; beq 9E93C

//funds ranking fix
//ORG $17380
//BL(GetConvoyItemArrayStart)

//which proc to call if convoy and inventory are full
ORG $1DFAC
callHack_r3(Hook_1DFAC)

//what string to display after sending an item or dropping it
ORG $1E058
callHack_r3(Hook_1E058)
SHORT $2800 $D00D $E004
ORG $1E07A; BL(0x1FD80)

#ifdef LANGUAGE_ES
	//"Dropped " + _ + "."
	ORG $1FD72
	SHORT $220F $2311
	
	//"" + _ + " was sent to convoy."
	ORG $1FD82
	SHORT $2201 $2310
#endif

//HandleNewItemGet
ORG $1E0E8
jumpToHack(Hook_1E0E8)

//SomethingPrepListRelated
ORG $9827C
callHack_r0(Hook_9827C)
SHORT 0xE006

//Give all items
ORG $9A550
callHack_r3(Hook_9A550)
SHORT 0xE007

//When selecting Give
ORG $9DD08
jumpToHack(Hook_9DD08)
SHORT 0x2800 0xD05B

//Probably related to transferring bonus items
ORG $B4730
jumpToHack(Hook_B4730)

//SaveConvoyItems
ORG $A324A
BYTE ConvoyTotalSize-1
//ORG $A31EE
//BL(GetConvoyItemArrayStart)

//LoadConvoyItems
ORG $A32D2
BYTE ConvoyTotalSize-1
//ORG $A327C
//BL(GetConvoyItemArrayStart)

/*

//Combine items when taking them out of the convoy
ORG $9E320
callHack_r3(CombineWhenTaking)

//Combine items when depositing one
ORG $9E894
callHack_r3(CombineWhenGivingOne)

//Give all is handled within Hook_9A550


//Display a "L+A: Combine" sprite instead of the "R: Info" on the supply page and when hovering over Give All on the prep screen
ORG $9DB18 //Supply page
SHORT 0x1C38 0x2102 //mov r0,r7; mov r1,#2
BL(jumpToStartCombine)
ORG $99678 //Prep screen page
SHORT 0x1C20 0x2100 //mov r0,r4; mov r1,#0
BL(jumpToStartCombine)
ORG $8952C //thing to display R: Info
jumpToHack(Delete_Proc_DisplayCombine)
*/

POP


ALIGN 4
#include "Convoy_Stuff.lyn.event"

ALIGN 4
#include "Partition_Functions.lyn.event"

gpConvoyItemArray:
WORD gConvoyItemArray


/*
ALIGN 4
gProc_DisplayCombine:
PROC_YIELD
PROC_LOOP_ROUTINE(CombineDisplayLoop|1)
PROC_END

ALIGN 4
CombineGraphicTable:
//BYTE x y sprite_palette_bank_id 0; POIN oam_data palette
BYTE $78 $8C $09 $00; POIN $A00B10 $A1D79C //Prep Screen when not on Give All
BYTE $70 $8C $09 $00; POIN Combine_OAM_Data Combine_Image_Palette //Prep screen when on Give All
BYTE $B0 $92 $08 $00; POIN Combine_OAM_Data Combine_Image_Palette //Supply screen

ALIGN 4
Combine_OAM_Data:
SHORT 2
SHORT 0x4000 0x8000 0x0038
SHORT 0x4000 0x8020 0x003C

ALIGN 4
Combine_Image_Graphics:
#incext Png2Dmp "Combine.png" --lz77

ALIGN 4
Combine_Image_Palette:
#incext Png2Dmp "Combine.png" --palette-only
*/
